{"version":3,"sources":["services/phonebook.js","components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["apiURL","axios","get","then","response","status","data","person","post","id","delete","put","Person","removeBtn","name","number","onClick","Persons","personToShow","map","i","Filter","newSearch","setSearch","value","onChange","event","target","PersonForm","addPerson","newName","newNumber","setNewName","setNewNumber","onSubmit","type","Notification","message","className","App","useState","persons","setPersons","useEffect","phonebookService","newEntry","errorMessage","setErrorMessage","notificationStyle","setNotificationStyle","filter","p","toLowerCase","includes","search","preventDefault","samePerson","length","window","confirm","newData","catch","error","console","log","concat","setTimeout","find","removedData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70032eef.chunk.js","sourcesContent":["import axios from 'axios'\nconst apiURL = '/api/persons'\nconst getAll = () => {\n    const request = axios\n      .get(apiURL)\n      .then(response => {\n        if (response.status === 200) {\n          return response.data\n        }\n      })\n      return request\n}\n\nconst addPerson = (person) => {\n    const request = axios\n      .post(apiURL,person)\n      .then(response => response.data)\n    return request\n}\nconst removePerson = (id) => {\n    const request = axios\n      .delete(`${apiURL}/${id}`)\n      .then(response => response.data)\n    return request\n}\nconst updatePerson = (person,id) => {\n  const request = axios\n  .put(`${apiURL}/${id}`,person)\n  .then(response => response.data)\n  return request\n}\nexport default {getAll,addPerson,removePerson,updatePerson}","import React from 'react'\n\nconst Person = ({person,removeBtn}) => {\n  return(\n    <div>{person.name} {person.number}\n    <button onClick={()=>removeBtn(person.id)}>delete</button>\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\nconst Persons = ({personToShow,removeBtn})=>{\n  return (\n    <div>\n      {personToShow.map((person,i)=><Person key={i} person={person} removeBtn={removeBtn}/>)}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({newSearch,setSearch}) => {\n  return (\n    <div>\n        filter shown with<input value={newSearch} onChange={(event) => setSearch(event.target.value)} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson,newName,newNumber,setNewName,setNewNumber}) => {\n\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={(event)=>setNewName(event.target.value)}/>\n        </div>\n        <div>number: <input value={newNumber} onChange={(event)=>setNewNumber(event.target.value)}/></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default PersonForm","import React from 'react'\nconst Notification = ({message,className}) => {\n    if(message === null){\n        return null\n    }\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\nexport default Notification","import React,{useState,useEffect} from 'react'\nimport phonebookService from './services/phonebook'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(newEntry => {\n        setPersons(newEntry)\n      })\n  }\n    , [])\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newSearch, setSearch ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ notificationStyle, setNotificationStyle ] = useState('error green')\n\n  const removePersonClick = (id) => {\n    const samePerson = persons.find(person => person.id === id)\n    if(samePerson.id > 0){\n      if(window.confirm(`Delete ${samePerson.name}?`)){\n        phonebookService.removePerson(samePerson.id)\n          .then(removedData => {\n            setPersons(persons.filter(person => person.id !== id))\n          })\n          .catch(error => {\n            setNotificationStyle('error red')\n            setErrorMessage(`Information of ${samePerson.name} has already been removed from server`)\n            setPersons(persons.filter(person => person.id !== id))\n            setTimeout(() => {\n             setErrorMessage(null) \n            setNotificationStyle('error green')\n            }, 2000);\n          })\n      }\n    }\n  }\n  const addPerson = (event) => {\n   event.preventDefault()\n   const samePerson = persons.filter(person => person.name === newName)\n   const newEntry = { name: newName,number: newNumber }\n   if(samePerson.length > 0){\n     if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        phonebookService.updatePerson(newEntry,samePerson[0].id)\n        .then(newData => {\n            setPersons(persons.map(person => (person.name === newData.name)?newData:person))\n        })\n        .catch(error => {\n          console.log(error)\n        })\n       setNewName('')\n       setNewNumber('')\n     }\n   }else{\n     phonebookService.addPerson(newEntry)\n       .then(newData => {\n         setErrorMessage(`Added ${newData.name}`)\n         setPersons(persons.concat(newData))\n         setTimeout(() => {\n          setErrorMessage(null) \n         }, 2000);\n       })\n       .catch(error => {\n         console.log(error)\n         setErrorMessage('Error')\n         setTimeout(() => {\n          setErrorMessage(null) \n         }, 2000);\n       })\n     setNewName('')\n     setNewNumber('')\n   }\n  }\n  const personToShow = newSearch ? persons.filter((p)=>{\n      return p.name.toLowerCase().includes(newSearch.toLowerCase())\n  }) : persons\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} className={notificationStyle}/>\n      <Filter search={newSearch} setSearch={setSearch} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons personToShow={personToShow} removeBtn={removePersonClick} />\n    </div>\n  )\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}